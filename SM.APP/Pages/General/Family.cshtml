@page
@model SM.APP.Pages.General.FamilyModel

@{
    ViewData["Title"] = "Family";
}


<h1>Family</h1>
<form>
    <p>
        <label>UN File Number: <input type="text" id="SearchString" asp-for="SearchString" /></label>
        <button type="button" id="openScannerButton">Scan</button>
        <input type="submit" value="Filter" />
    </p>
</form>
<div id="scanner-container" style="display: none; margin-top: 10px;">
    <video id="scanner-preview" style="width: 400px; height: 300px;"></video>
    <button type="button" id="closeScannerButton" style="margin-top: 10px;">Close Scanner</button>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Member[0].Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Member[0].FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Member[0].UNPersonalNumber)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Member)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UNPersonalNumber)
                </td>
            </tr>
        }
    </tbody>
</table>


<script src="https://cdn.jsdelivr.net/npm/@@zxing/browser@latest"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("SearchString");
        const scannerContainer = document.getElementById("scanner-container");
        const openScannerButton = document.getElementById("openScannerButton");
        const closeScannerButton = document.getElementById("closeScannerButton");
        const videoElement = document.getElementById("scanner-preview");

        let codeReader;

        openScannerButton.addEventListener("click", async function () {
            scannerContainer.style.display = "block";

            // Initialize the code reader
            codeReader = new ZXing.BrowserMultiFormatReader();

            try {
                const devices = await codeReader.listVideoInputDevices();
                const selectedDeviceId = devices[0].deviceId; // Use the first available device

                // Start decoding
                await codeReader.decodeFromVideoDevice(selectedDeviceId, videoElement, (result, error) => {
                    if (result) {
                        console.log(result.text);
                        searchInput.value = result.text; // Populate the input field
                        codeReader.reset(); // Stop the scanner
                        scannerContainer.style.display = "none"; // Hide scanner
                    }
                    if (error) {
                        console.warn("Error decoding:", error);
                    }
                });
            } catch (err) {
                console.error("Error initializing scanner:", err);
            }
        });

        closeScannerButton.addEventListener("click", function () {
            if (codeReader) {
                codeReader.reset(); // Stop the scanner
                scannerContainer.style.display = "none";
            }
        });
    });
</script>
