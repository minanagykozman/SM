@page
@model SM.APP.Pages.Cards.IndexModel

@{
    ViewData["Title"] = "Members Cards";
}
@using SM.DAL.DataModel
<div class="container my-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="mb-0">Members' Cards</h4>
        <span id="counter" class="badge bg-success px-3 py-2 fs-6">Members: 0</span>
        <div class="form-floating">
            <select id="dpCardStatus" asp-for="CardStatus"
                    class="form-select">
                <option value="">Select Card Status</option>
                <option value="MissingPhoto">Missing photo</option>
                <option value="ReadyToPrint">Ready to print</option>
                <option value="Printed">Printed</option>
                <option value="Delivered">Delivered</option>
                <option value="NotApplicable">Not applicable</option>
            </select>
            <label asp-for="CardStatus"></label>
        </div>
    </div>
    <!-- Search Form -->
    <partial name="_SearchPartial" />
    <partial name="_ModalPartial" />
    <!-- Table for Larger Screens -->
    <div class="d-none d-md-block">
        <div class="table-responsive">
            <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
                <table class="table table-hover align-middle" id="dataTable">
                    <thead class="table-primary">
                        <tr>
                            <th>
                                Code
                                <input type="text" class="form-control form-control-sm border-primary filter-input" data-column="0" placeholder="Search Code">
                            </th>
                            <th>
                                Name
                                <input type="text" class="form-control form-control-sm border-primary filter-input" data-column="1" placeholder="Search Name">
                            </th>
                            <th>
                                UN File Number
                                <input type="text" class="form-control form-control-sm border-primary filter-input" data-column="2" placeholder="Search UN File">
                            </th>
                            <th>
                                UN Personal Number
                                <input type="text" class="form-control form-control-sm border-primary filter-input" data-column="3" placeholder="Search UN Number">
                            </th>
                            <th>
                                Card Status
                                <input type="text" class="form-control form-control-sm border-primary filter-input" data-column="4" placeholder="Search UN No">
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Mobile View -->
    <partial name="_MobileViewPartial" />
</div>



<script>
    var apiBaseUrl = '@Services.SMConfigurationManager.ApiBase';
    document.addEventListener("DOMContentLoaded", function () {
        fetchCardStatusMembers('');
    });
    document.getElementById("dpCardStatus").addEventListener("change", function() {
        fetchCardStatusMembers(this.value);
    });
    async function fetchCardStatusMembers(cardStatus) {
        if(cardStatus==='')
        {
            showErrorMessage("Please select card status!");
            document.getElementById("counter").textContent = `Members: 0`;
            return;
        }
        const url = `${apiBaseUrl}/Member/GetMembersByCardStatus`;

        try {
            const response = await fetch(`${url}?cardStatus=${cardStatus}`, {
                method: "GET",
                credentials: "include",
                headers: {
                    "Content-Type": "application/json"
                }
            });

            if (!response.ok) {
                handleHTTPError(response);
                return;
            }

            const members = await response.json();

            if (!Array.isArray(members) || members.length === 0) {
                showErrorMessage("No members found for this status.");
                return;
            }

            document.getElementById("counter").textContent = `Members: ${members.length}`;
            populateTable(members);
        } catch (error) {
            console.error("Network error:", error);
            showErrorMessage("Failed to fetch data. Please try again later.");
        }
    }


    function populateTable(members) {
        const tableBody = document.querySelector("#dataTable tbody");
        tableBody.innerHTML = ""; // Clear existing rows

        const mobileList = document.getElementById("mobileList");
        mobileList.innerHTML = ""; // Clear existing list items

        members.forEach(member => {
            const row = document.createElement("tr");

            row.innerHTML = `
                <td><a href="/Admin/Members/Edit?id=${member.memberID}" target="_blank" rel="noopener noreferrer">${member.code}</a></td>
                <td>${member.fullName}</td>
                <td>${member.unFileNumber}</td>
                <td>${member.unPersonalNumber}</td>
                <td>${member.cardStatus}</td>
            `;

            tableBody.appendChild(row);

            const listItem = document.createElement("div");
        listItem.classList.add("list-group-item", "list-group-item-action", "flex-column", "align-items-start");

        listItem.innerHTML = `
            <h5 class="mb-1 text-primary">
                <a href="/Admin/Members/Edit?id=${member.memberID}" target="_blank" rel="noopener noreferrer">${member.code}</a>
            </h5>
            <p class="mb-1"><strong>Name:</strong> ${member.fullName}</p>
            <p class="mb-1"><strong>UN File Number:</strong> ${member.unFileNumber}</p>
            <p class="mb-1"><strong>UN Number:</strong> ${member.unPersonalNumber}</p>
            <p class="mb-1"><strong>Card Status:</strong> ${member.cardStatus}</p>
        `;

        mobileList.appendChild(listItem);
        });
    }
    document.getElementById("btnCheck").addEventListener("click", function () {
        const searchValue = document.getElementById("SearchString").value.trim();
        const cardStatus = document.getElementById("dpCardStatus").value.trim();
        if (!searchValue) {
            alert("Please enter a search value.");
            return;
        }
        if (!cardStatus) {
            alert("Please choose card status.");
            return;
        }
        fetchMemberData(searchValue);
    });
    async function fetchMemberData(searchValue) {

        try {
            const apiUrl = `${apiBaseUrl}/Member/GetMemberByCode?memberCode=${encodeURIComponent(searchValue)}`;
            const response = await fetch(apiUrl, {
                method: "GET",
                credentials: "include",
                headers: {
                    "Content-Type": "application/json"
                }
            });

            if (!response.ok) {
                alert("Failed to fetch data. Please try again later.");
                return;
            }
            const text = await response.text();
            if (text) {
                const member = JSON.parse(text);
                populateModal(member);
            }
            else
            {
                populateModal(null);
            }
            
            showModal();
        } catch (error) {
            console.error("Network error:", error);
            alert("Failed to fetch data. Please try again later.");
        }
    }
    // Function to fill modal with API response
    function populateModal(member) {
        if(member){
            $("#divTeam").hide();
            $("#divBus").hide();
            $("#divStatus").hide();
            $("#divAge").hide();
            

            document.getElementById("MemberCode").value =member.code;
            document.getElementById("MemberName").value =member.fullName;

            document.getElementById("CardStatus").value =document.getElementById("dpCardStatus").value;
            document.getElementById("lblCard").innerText ='Update card status to';
            document.getElementById("submitBtn").innerHTML = '<i class="bi bi-check-circle"></i> Update';

            document.querySelector('input[name="MemberCode"]').value = member.code;
            $("#MemberDataBody").show();
            $("#submitBtn").show();
        }
        else{
            document.getElementById("MemberStatus").value = "Member not found.";
            $("#MemberDataBody").hide();
            $("#submitBtn").hide();
            $("#divStatus").show();
        }
    }

    document.getElementById("submitBtn").addEventListener("click", function () {

        const cardStatus = document.getElementById("dpCardStatus").value;
        const memberCode = document.querySelector('input[name="MemberCode"]').value;

        const apiUrl = `${apiBaseUrl}/Member/UpdateMemberCard`;


        fetch(apiUrl, {
            method: "POST",
            credentials: "include",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({  memberCode: memberCode, cardStatus: cardStatus})
        })
        .then(data => {
            fetchCardStatusMembers(cardStatus);
            closeModal(); // Close the modal after successful API call
            var searchInput = document.getElementById("SearchString");
            searchInput.value = "";
            searchInput.focus();
        })
        .catch(error => {
            console.error("Error:", error);
            closeModal();
            alert("Failed to add member. Please try again.");
        });
    });
</script>