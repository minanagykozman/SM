@page
@model SM.APP.Pages.Admin.Servants.IndexModel
@{
    ViewData["Title"] = "Servants";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h4 class="mb-0">
            Servants <span id="servant-counter" class="text-muted fs-6 fw-normal"></span>
        </h4>
        <a asp-page="Create" class="btn btn-primary">
            <i class="bi bi-plus-lg me-2"></i>Create New Servant
        </a>
    </div>

    <div id="servant-grid" class="row g-4">
    </div>
</div>

@section Scripts {
    <script>
        const apiBaseUrl = '@Services.SMConfigurationManager.ApiBase';

        // Placeholder function for deleting a servant
        function deleteServant(servantId, servantName) {
            console.log(`Delete action for ID: ${servantId}, Name: ${servantName}`);
            alert(`Delete functionality for ${servantName} (ID: ${servantId}) is not yet implemented.`);
        }

        // Function to fetch and populate the servant grid
        async function loadServants() {
            const servantGrid = document.getElementById("servant-grid");
            const counterElement = document.getElementById("servant-counter");

            // Show a loading spinner
            servantGrid.innerHTML = `<div class="d-flex justify-content-center p-5 w-100"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></div>`;

            try {
                const request = `${apiBaseUrl}/Servants/GetServants`;
                const response = await fetch(request, {
                    method: "GET",
                    credentials: "include"
                });

                if (!response.ok) {
                    throw new Error("Failed to fetch servants.");
                }

                const servants = await response.json();
                servantGrid.innerHTML = ''; // Clear the loading spinner

                // Update the counter
                counterElement.textContent = `(${servants.length} Servants)`;

                // Handle the case where no servants are found
                if (servants.length === 0) {
                    servantGrid.innerHTML = '<div class="col-12"><div class="alert alert-info text-center">No servants have been created yet.</div></div>';
                    return;
                }

                // Populate the grid with servant cards
                servants.forEach(servant => {
                    const servantCardCol = document.createElement("div");
                    servantCardCol.className = "col-xl-4 col-lg-6 col-md-6 col-sm-12";

                    const statusBadge = servant.isActive
                        ? `<span class="badge bg-success">Active</span>`
                        : `<span class="badge bg-danger">Inactive</span>`;

                    servantCardCol.innerHTML = `
                        <div class="card h-100 shadow-sm">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start">
                                    <h5 class="card-title mb-2">${servant.servantName}</h5>
                                    <div class="dropdown">
                                        <button class="btn btn-sm btn-light" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="bi bi-three-dots-vertical"></i>
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item" href="/Admin/Servants/Edit/${servant.servantID}"><i class="bi bi-pencil-square me-2"></i>Edit</a></li>
                                            <li><a class="dropdown-item text-danger" href="#" onclick="deleteServant(${servant.servantID}, '${servant.name}')"><i class="bi bi-trash-fill me-2"></i>Delete</a></li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="mb-3">${statusBadge}</div>

                                <p class="card-text mb-2">
                                    <i class="bi bi-envelope-fill me-2 text-muted"></i>
                                    <span>${servant.email}</span>
                                </p>
                                <p class="card-text mb-0">
                                    <i class="bi bi-telephone-fill me-2 text-muted"></i>
                                    <a href="tel:${servant.mobile1}" class="text-decoration-none text-dark">${servant.mobile1}</a>
                                </p>
                            </div>
                        </div>
                    `;
                    servantGrid.appendChild(servantCardCol);
                });

            } catch (err) {
                console.error("Error loading servants:", err);
                servantGrid.innerHTML = `<div class="col-12"><div class="alert alert-danger">Error: Could not load servant data.</div></div>`;
            }
        }

        // Load the servants when the page is ready
        $(function () {
            loadServants();
        });
    </script>
}