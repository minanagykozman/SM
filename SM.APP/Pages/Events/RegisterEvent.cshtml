@page
@model SM.APP.Pages.Events.RegisterEventModel
@{
    ViewData["Title"] = "Register Event";
}
@using SM.APP.Pages.Events;
@using SM.DAL.DataModel;
<div class="container my-4">
    <!-- Page Title -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="mb-0">Register Event</h4> <!-- Optional title -->
        <span class="badge bg-success px-3 py-2 fs-6">Registered @Model.RegisteredCount</span>
    </div>

    <form method="get" id="filterForm">
        <div class="mb-3 d-flex align-items-center">
            <input type="hidden" name="eventID" value="@ViewContext.HttpContext.Request.Query["eventID"]" />
            <div class="form-floating flex-grow-1">
                <input asp-for="UserCode" class="form-control" id="SearchString" placeholder="Enter Code" />
                <label asp-for="UserCode">Code</label>
            </div>

            <!-- Scan QR Code Button (only visible on mobile) -->
            <button type="button" id="btnScanQR" class="btn btn-secondary ms-2 d-md-none">Scan QR</button>

            <button id="btnCheck" type="submit" class="btn btn-primary ms-2">Check</button>
        </div>
    </form>
    <div id="qrScannerContainer" class="mt-3 d-none">
        <div id="reader" style="width: 100%;"></div>
        <button id="btnStopScan" class="btn btn-danger mt-2">Stop Scanning</button>
    </div>
    <!-- Table for Larger Screens -->
    <div class="d-none d-md-block">
        <div class="table-responsive">
            <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
                <table class="table table-hover table-striped  align-middle" id="dataTable">
                    <thead class="table-primary">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.EventMembers[0].Code)
                                <input type="text" class="form-control form-control-sm border-primary filter-input" data-column="0" placeholder="Search Code">
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EventMembers[0].FullName)
                                <input type="text" class="form-control form-control-sm border-primary filter-input" data-column="1" placeholder="Search Name">
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EventMembers[0].UNFileNumber)
                                <input type="text" class="form-control form-control-sm border-primary filter-input" data-column="2" placeholder="Search UN File">
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EventMembers[0].UNPersonalNumber)
                                <input type="text" class="form-control form-control-sm border-primary filter-input" data-column="3" placeholder="Search UN No">
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EventMembers[0].Age)
                                <input type="text" class="form-control form-control-sm border-primary filter-input" data-column="4" placeholder="Search Age">
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EventMembers[0].Baptised)
                                <input type="text" class="form-control form-control-sm border-primary filter-input" data-column="5" placeholder="Search Baptised">
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.EventMembers[0].CardStatus)
                                <input type="text" class="form-control form-control-sm border-primary filter-input" data-column="6" placeholder="Search Card Status">
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.EventMembers)
                        {
                            <tr>
                                <td>
                                    <a asp-page="/Admin/Members/Edit" asp-route-id="@item.MemberID" target="_blank" rel="noopener noreferrer">@Html.DisplayFor(modelItem => item.Code)</a>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FullName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UNFileNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UNPersonalNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Age)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Baptised)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CardStatusDisplay)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <!-- Mobile View -->
    <div class="d-block d-md-none">
        <div class="card p-2 mb-2 bg-light">
            <h6 class="text-primary">Filter</h6>
            <input type="text" class="form-control form-control-sm mobile-filter" placeholder="Search members...">
        </div>

        <div class="list-group" id="mobileList">
            @foreach (var item in Model.EventMembers)
            {
                <div class="list-group-item list-group-item-action flex-column align-items-start">
                    <h5 class="mb-1 text-primary">
                        <a asp-page="/Admin/Members/Edit" asp-route-id="@item.MemberID" target="_blank" rel="noopener noreferrer">@Html.DisplayFor(modelItem => item.Code)</a>
                    </h5>
                    <p class="mb-1"><strong>Name:</strong> @Html.DisplayFor(modelItem => item.FullName)</p>
                    <p class="mb-1"><strong>Age:</strong> @Html.DisplayFor(modelItem => item.Age)</p>
                    <p class="mb-1"><strong>File Number:</strong> @Html.DisplayFor(modelItem => item.UNFileNumber)</p>
                    <p class="mb-1"><strong>Personal Number:</strong> @Html.DisplayFor(modelItem => item.UNPersonalNumber)</p>
                </div>
            }
        </div>
    </div>
</div>
<form method="post" id="registerForm">
    <div class="modal fade" id="myModal" tabindex="-1" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header bg-light">
                    <h5 class="modal-title" id="myModalLabel">Member Status</h5>
                    <button type="button" class="btn-close" id="btnClose" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <!-- Modal Body -->
                <div class="modal-body">
                    <!-- Status -->
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control" id="MemberStatus" value="@Model.MemberStatus" readonly />
                        <label for="MemberStatus">Status</label>
                    </div>

                    @if (Model.MemberData?.Member != null)
                    {
                        <!-- Name & Age Row -->
                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="form-floating">
                                    <input type="text" class="form-control" id="MemberName" value="@Model.MemberData.Member.FullName" readonly />
                                    <label for="MemberName">Name</label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-floating">
                                    <input type="text" class="form-control" id="MemberAge" value="@Model.MemberData.Member.Age" readonly />
                                    <label for="MemberAge">Age</label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-floating">
                                    <input type="text" class="form-control" id="ImageReference" value="@Html.DisplayFor(modelItem => Model.MemberData.Member.CardStatusDisplay)" readonly />
                                    <label for="MemberAge">Card Status</label>
                                </div>
                            </div>
                            @if (Model.MemberData.Status == RegistrationStatus.MemberNotEligible ||
                           Model.MemberData.Status == RegistrationStatus.ReadyToRegister)
                            {
                                <div class="col-md-12">
                                    <div class="form-floating mb-3">
                                        <textarea class="form-control" id="notes" asp-for="Notes" placeholder="Enter any notes here..." style="height: 100px;"></textarea>
                                        <label for="notes">Notes</label>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>

                <!-- Modal Footer -->
                <div class="modal-footer d-flex justify-content-between">
                    <button type="button" id="btnCancel" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> Cancel
                    </button>

                    @if (Model.MemberData?.Member != null &&
                    (Model.MemberData.Status == RegistrationStatus.MemberNotEligible ||
                    Model.MemberData.Status == RegistrationStatus.ReadyToRegister))
                    {
                        <button type="submit" id="submitBtn" class="btn btn-success">
                            <i class="bi bi-check-circle"></i> Register
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var isShowModal = @Model.ShowModal.ToString().ToLower();
        var searchInput = document.getElementById("SearchString");
        var cancelBtn = document.getElementById("btnCancel");
        if (cancelBtn) {
            cancelBtn.addEventListener('click', function () {
                searchInput.value = "";
                searchInput.focus(); // Focus on search input when Cancel is clicked
            });
        }
        var btnClose = document.getElementById("btnClose");
        if (btnClose) {
            btnClose.addEventListener('click', function () {
                searchInput.value = "";
                searchInput.focus(); // Focus on search input when Cancel is clicked
            });
        }
        // Handle Esc key press to close the modal and clear input
        document.addEventListener('keydown', function (event) {
            if (event.key === 'Escape') {
                searchInput.value = "";
                searchInput.focus();
            }
        });

        if (searchInput)
        {
            searchInput.focus();
        }
        if (isShowModal) {
            var myModal = new bootstrap.Modal(document.getElementById('myModal'));
            myModal.show();
        }

        // Handle Enter key inside modal
        document.getElementById('myModal').addEventListener('keydown', function (event) {
            if (event.key === 'Enter' && !event.shiftKey) {
                event.preventDefault(); // Prevent default behavior
                document.getElementById('submitBtn').click(); // Trigger submit button
            }
        });

        // Allow Shift + Enter for new lines in textarea
        document.getElementById('notes')?.addEventListener('keydown', function (event) {
            if (event.key === 'Enter' && event.shiftKey) {
                event.stopPropagation(); // Allow new line in textarea
            }
        });

        // Ensure modal backdrop is removed when modal is closed
        document.getElementById('myModal').addEventListener('hidden.bs.modal', function () {
            document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());
        });



         const scanButton = document.getElementById("btnScanQR");
         const qrScannerContainer = document.getElementById("qrScannerContainer");
         const stopScanButton = document.getElementById("btnStopScan");

         let html5QrCode;

         // Show QR scanner on mobile only
         if (window.innerWidth <= 768) {
             scanButton.addEventListener("click", function () {
                 qrScannerContainer.classList.remove("d-none");

                 html5QrCode = new Html5Qrcode("reader");
                 html5QrCode.start(
                     { facingMode: "environment" }, // Use back camera
                     {
                         fps: 10,
                         qrbox: { width: 250, height: 250 }
                     },
                     (decodedText) => {
                         searchInput.value = decodedText;
                         document.getElementById('filterForm').submit();
                         //html5QrCode.stop();
                         //qrScannerContainer.classList.add("d-none");
                     },
                     (errorMessage) => {
                         console.warn("QR Code scan error: ", errorMessage);
                     }
                 ).catch((err) => {
                     console.error("QR Code scanning failed: ", err);
                 });
             });
                  // Stop scanning
             stopScanButton.addEventListener("click", function () {
                 if (html5QrCode) {
                     html5QrCode.stop();
                 }
                 qrScannerContainer.classList.add("d-none");
             });
         }
    });
</script>


